<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"C:\Drs\Term6\CAD\New folder\Alu_Cad\super_alu.vhd" Line 81: Assignment to <arg fmt="%s" index="1">checktmp4</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ1</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ2</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ3</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ4</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ5</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ6</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ7</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">writ8</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">power&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="1767" delta="new" >HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ8</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ7</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ6</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ5</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ4</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ3</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ2</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ1</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ8</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ7</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ6</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ5</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ4</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ3</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ2</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="1426" delta="new" >The value init of the FF/Latch <arg fmt="%s" index="1">writ1</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">super_alu</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">1</arg>.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">Mmult_n14113</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">Mmult_n14133</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">writ5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">writ6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">writ7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">writ8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c8/outputReg_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c7/outputReg_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c6/outputReg_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="new" >Node &lt;<arg fmt="%s" index="1">c5/outputReg_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">super_alu</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2170" delta="new" >Unit <arg fmt="%s" index="1">super_alu</arg> : the following signal(s) form a combinatorial loop: </msg>

<msg type="warning" file="Xst" num="2254" delta="new" >Area constraint could not be met for block &lt;<arg fmt="%s" index="1">super_alu</arg>&gt;, final ratio is <arg fmt="%i" index="2">1970</arg>.
</msg>

<msg type="warning" file="Xst" num="1336" delta="new" > (*) More than 100% of Device resources are used
</msg>

<msg type="info" file="Xst" num="2169" delta="new" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>
